services:
  redis-broker:
    image: redis:7 
    container_name: job_master_redis_broker 
    ports:
      - "6379:6379" 
    command: redis-server --appendonly yes 
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf 
      - redis_data:/data 

  postgres:
    image: postgres:13
    container_name: job_master_postgres
    ports:
      - "3000:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  producer:
    build:
      context: ./project
      dockerfile: Dockerfile
    command: uvicorn producer:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./project:/app
    ports:
      - '8000:8000'
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    depends_on:
      - redis-broker

  consumer:
    build:
      context: ./project
      dockerfile: Dockerfile
    deploy:
      replicas: 2
    command: celery -A consumer.celery_app worker --loglevel=INFO --purge --concurrency=1
    volumes:
      - ./project:/app
    depends_on:
      - redis-broker
      - postgres
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}

  dashboard:
    build:
      context: ./project
      dockerfile: Dockerfile
    command: bash -c "sleep 10; celery -A consumer.celery_app flower --loglevel=INFO --url_prefix=dashboard;"
    ports:
      - '5555:5555'
    volumes:
      - ./project:/app
    depends_on:
      - consumer
      - redis-broker
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}

  jobmaster:
    build:
      context: ./project
      dockerfile: Dockerfile
    container_name: job_master_api
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    volumes:
      - ./project:/app
    depends_on:
      - redis-broker
      - postgres
    environment:
      PYTHONUNBUFFERED: 1
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: postgres
      DB_PORT: 5432
      REDIS_HOST: redis-broker
      REDIS_PORT: 6379
      REDIS_DB: 0
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}

  worker:
    build:
      context: ./project
      dockerfile: Dockerfile
    container_name: job_master_celery_worker_1
    command: celery -A consumer.celery_app worker --loglevel=info
    volumes:
      - ./project:/app
    depends_on:
      - redis-broker
      - postgres
    environment:
      PYTHONUNBUFFERED: 1
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: postgres
      DB_PORT: 5432
      REDIS_HOST: redis-broker
      REDIS_PORT: 6379
      REDIS_DB: 0
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}

  celery_beat:
    build:
      context: ./project
      dockerfile: Dockerfile
    container_name: job_master_celery_beat
    command: celery -A consumer.celery_app beat --loglevel=info
    volumes:
      - ./project:/app
    depends_on:
      - redis-broker
      - postgres
    environment:
      PYTHONUNBUFFERED: 1
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: postgres
      DB_PORT: 5432
      REDIS_HOST: redis-broker
      REDIS_PORT: 6379
      REDIS_DB: 0
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}

volumes:
  redis_data:
  postgres_data: